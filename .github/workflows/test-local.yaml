---
name: Test local builder

permissions:
  pull-requests: write
  contents: read

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/**
      - "**.nix"
      - "flake.lock"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  EXCLUDED_HOSTS: '["mavy-wsl","optimus"]'
  TMPDIR: /tmp

jobs:
  nix-build:
    if: github.event.pull_request.draft == false
    runs-on: nix-config-runner
    steps:
      - name: Create nix mount point
        # if: contains(matrix.os, 'ubuntu')
        run: sudo mkdir /nix

      - name: Install prerequisites
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            xz-utils \
            binfmt-support \
            qemu-user-static
          sudo update-binfmts --package qemu-user-static --enable

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      # - name: Free disk space
      #   if: ${{ matrix.system == 'x86_64-linux' }}
      #   uses: jlumbroso/free-disk-space@main
      #   with:
      #     # These 5 options give back ~32Gb. If that's not enough, the remaining flags can be set to `true` at the expense
      #     # of this action taking longer to finish
      #     android: true
      #     dotnet: true
      #     haskell: true
      #     docker-images: true
      #     swap-storage: true

      #     large-packages: true
      #     tool-cache: true

      # - name: Set up QEMU
      #   if: ${{ matrix.system == 'aarch64-linux' }}
      #   id: qemu
      #   uses: docker/setup-qemu-action@v3.6.0
      #   with:
      #     platforms: all

      - name: Install Nix
        uses: cachix/install-nix-action@f0fe604f8a612776892427721526b4c7cfb23aba # v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            accept-flake-config = true
            always-allow-substitutes = true
            builders-use-substitutes = true
            experimental-features = nix-command flakes
            extra-platforms = aarch64-linux
            extra-access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= mavy.cachix.org-1:fsS3qUaevKZDag/2fMrGAB9wEBd7pkrKihM071JuxLk= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE= cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g= cosmic.cachix.org-1:Dya9IyXD4xdBehWjrkPv6rtxpmMdRel02smYzA85dPE=
            substituters = https://mavy.cachix.org https://cache.garnix.io https://cosmic.cachix.org/ https://nix-community.cachix.org https://numtide.cachix.org https://cache.nixos.org/

      - name: Setup Attic cache
        uses: ryanccn/attic-action@v0
        with:
          endpoint: ${{ secrets.ATTIC_ENDPOINT }}
          cache: nix-config
          token: ${{ secrets.ATTIC_TOKEN }}

      - name: Install NVD
        run: nix profile install nixpkgs#nvd

      - name: Garbage collect build dependencies
        run: nix-collect-garbage

      - name: Build previous bumblebee system
        run: |
          nix build \
            "github:nnmavy/nix-config#top.bumblebee" \
            --system x86_64-linux \
            --log-format raw \
            --fallback \
            --no-write-lock-file \
            -o result-previous \
            > >(tee stdout.log) 2> >(tee /tmp/nix-build-err.log >&2)

      - name: Build new bumblebee system
        run: |
          set -o pipefail
          nix build \
            ".#top.bumblebee" \
            --system x86_64-linux \
            -o result-new \
            --fallback \
            --no-write-lock-file \
            --log-format raw \
            > >(tee stdout.log) 2> >(tee /tmp/nix-build-err.log >&2)

      - name: Output build failure
        if: failure()
        run: |
          drv=$(grep "For full logs, run" /tmp/nix-build-err.log | grep -oE "/nix/store/.*.drv")
          if [ -n "$drv" ]; then
            nix log "$drv"
            echo "$drv"
          fi
          exit 1

      - name: Diff profile
        id: diff
        run: |
          delimiter="$(openssl rand -hex 16)"
          echo "diff<<${delimiter}" >> "${GITHUB_OUTPUT}"
          nvd --color never diff ./result-previous ./result-new | sed '/<<</d; />>>/d' >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

      - name: Comment report in pr
        uses: marocchino/sticky-pull-request-comment@52423e01640425a022ef5fd42c6fb5f633a02728 # v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: ".#top.bumblebee"
          message: |
            ### Report for `bumblebee`
            ```
            ${{ steps.diff.outputs.diff }}
            ```
