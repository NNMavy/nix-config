---
name: Build and diff Nix systems

permissions:
  pull-requests: write
  contents: read

on:
  pull_request:
    paths-ignore: ["nixos/pkgs/**", ".github"]
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main
    paths:
      - .github/workflows/**
      - "**.nix"
      - "flake.lock"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  EXCLUDED_HOSTS: '["mavy-wsl", "optimus"]'
  TMPDIR: /tmp

jobs:
  nix-matrix:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Nix
        uses: cachix/install-nix-action@02a151ada4993995686f9ed4f1be7cfbb229e56f # v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            accept-flake-config = true

      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#evalHosts' | jq -cM --argjson exclude_hosts '${{ env.EXCLUDED_HOSTS }}' 'del(.include[] | select(.host as $host | $exclude_hosts | index($host)))')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

      - name: show output
        run: |
          echo "${{ toJson(steps.set-matrix.outputs.matrix) }}" >> "${GITHUB_STEP_SUMMARY}"

  nix-build:
    if: github.event.pull_request.draft == false
    needs: nix-matrix
    strategy:
      fail-fast: false
      max-parallel: 1 # One at a time for wireguard
      matrix: ${{ fromJSON(needs.nix-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Free disk space
        if: ${{ matrix.system }} == "x86_64-linux" # Only run when building x86
        uses: jlumbroso/free-disk-space@main
        with:
          # These 5 options give back ~32Gb. If that's not enough, the remaining flags can be set to `true` at the expense
          # of this action taking longer to finish
          android: true
          dotnet: true
          haskell: true
          docker-images: true
          swap-storage: true

          large-packages: false
          tool-cache: false

      - name: Set up QEMU
        if: ${{ matrix.system }} == "aarch64-linux" 
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Install Nix
        uses: cachix/install-nix-action@02a151ada4993995686f9ed4f1be7cfbb229e56f # v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            accept-flake-config = true
            always-allow-substitutes = true
            builders-use-substitutes = true
            experimental-features = nix-command flakes
            extra-platforms = aarch64-linux
            extra-access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= mavy.cachix.org-1:fsS3qUaevKZDag/2fMrGAB9wEBd7pkrKihM071JuxLk= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE= cache.garnix.io:CTFPyKSLcx5RMJKfLo5EEPUObbA78b0YQ2DTCJXqr9g= cosmic.cachix.org-1:Dya9IyXD4xdBehWjrkPv6rtxpmMdRel02smYzA85dPE=
            substituters = https://mavy.cachix.org https://cache.garnix.io https://cosmic.cachix.org/ https://nix-community.cachix.org https://numtide.cachix.org https://cache.nixos.org/

      - name: Setup WireGuard
        run: |
          sudo apt install wireguard
          echo "${{ secrets.WIREGUARD_PRIVATE_KEY }}" > privatekey
          sudo ip link add dev wg1 type wireguard
          sudo ip address add dev wg1 ${{ secrets.WIREGUARD_OVERLAY_NETWORK_IP }} peer ${{ secrets.ATTIC_TARGET_IP }}
          sudo wg set wg1 listen-port 48123 private-key privatekey peer ${{ secrets.WIREGUARD_PEER_PUBLIC_KEY }} allowed-ips 0.0.0.0/0 endpoint ${{ secrets.WIREGUARD_ENDPOINT }}
          sudo ip link set up dev wg1
          # Ensure we can contact the target
          ping ${{ secrets.ATTIC_TARGET_IP }} -w 4 || exit 1

      - name: Setup Attic cache
        uses: ryanccn/attic-action@v0
        with:
          endpoint: ${{ secrets.ATTIC_ENDPOINT }}
          cache: nix-config
          token: ${{ secrets.ATTIC_TOKEN }}

      - name: Install NVD
        run: nix profile install nixpkgs#nvd

      - name: Garbage collect build dependencies
        run: nix-collect-garbage

      - name: Build previous ${{ matrix.host }} system
        run: |
          nix build \
            "github:nnmavy/nix-config#top.${{ matrix.host }}" \
            --system ${{ matrix.system }} \
            --log-format raw \
            --fallback \
            --no-write-lock-file \
            -o result-previous \
            > >(tee stdout.log) 2> >(tee /tmp/nix-build-err.log >&2)

      - name: Build new ${{ matrix.host }} system
        run: |
          set -o pipefail
          nix build \
            ".#top.${{ matrix.host }}" \
            --system ${{ matrix.system }} \
            -o result-new \
            --fallback \
            --no-write-lock-file \
            --log-format raw \
            > >(tee stdout.log) 2> >(tee /tmp/nix-build-err.log >&2)

      - name: Output build failure
        if: failure()
        run: |
          drv=$(grep "For full logs, run" /tmp/nix-build-err.log | grep -oE "/nix/store/.*.drv")
          if [ -n "$drv" ]; then
            nix log "$drv"
            echo "$drv"
          fi
          exit 1

      - name: Diff profile
        id: diff
        run: |
          delimiter="$(openssl rand -hex 16)"
          echo "diff<<${delimiter}" >> "${GITHUB_OUTPUT}"
          nvd --color never diff ./result-previous ./result-new | sed '/<<</d; />>>/d' >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

      - name: Comment report in pr
        uses: marocchino/sticky-pull-request-comment@52423e01640425a022ef5fd42c6fb5f633a02728 # v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: ".#top.${{ matrix.host }}"
          message: |
            ### Report for `${{ matrix.host }}`
            ```
            ${{ steps.diff.outputs.diff }}
            ```

  nix-build-success:
    if: ${{ always() }}
    needs:
      - nix-build
    name: Nix Build Successful
    runs-on: ubuntu-latest
    steps:
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        name: Check matrix status
        run: exit 1
