---
name: Build and diff Nix systems

permissions:
  pull-requests: write
  contents: read

on:
  pull_request:
    paths-ignore: ["nixos/pkgs/**", ".github"]
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main
    paths:
      - .github/workflows/**
      - "**.nix"
      - "flake.lock"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  EXCLUDED_HOSTS: '["mavy-wsl", "optimus"]'
  TMPDIR: /tmp

jobs:
  nix-matrix:
    runs-on: self-hosted

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#evalHosts' | jq -cM --argjson exclude_hosts '${{ env.EXCLUDED_HOSTS }}' 'del(.include[] | select(.host as $host | $exclude_hosts | index($host)))')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

      - name: show output
        run: |
          echo "${{ toJson(steps.set-matrix.outputs.matrix) }}" >> "${GITHUB_STEP_SUMMARY}"

      # This is necessary because any files created by this container will be owned by root and unable to be deleted by the runner user
      - name: Clean the workspace
        run: find $GITHUB_WORKSPACE -mindepth 1 -delete
        if: ${{ always() }}

  nix-build:
    if: github.event.pull_request.draft == false
    needs: nix-matrix
    strategy:
      fail-fast: false
      max-parallel: 1 # One at a time for wireguard
      matrix: ${{ fromJSON(needs.nix-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Setup Attic cache
        uses: ryanccn/attic-action@v0
        with:
          endpoint: ${{ secrets.ATTIC_ENDPOINT }}
          cache: nix-config
          token: ${{ secrets.ATTIC_TOKEN }}

      - name: Garbage collect build dependencies
        run: nix-collect-garbage

      - name: Build previous ${{ matrix.host }} system
        run: |
          nix build \
            "github:nnmavy/nix-config#top.${{ matrix.host }}" \
            --system ${{ matrix.system }} \
            --log-format raw \
            --fallback \
            --no-write-lock-file \
            -o result-previous \
            > >(tee stdout.log) 2> >(tee /tmp/nix-build-err.log >&2)

      - name: Build new ${{ matrix.host }} system
        run: |
          set -o pipefail
          nix build \
            ".#top.${{ matrix.host }}" \
            --system ${{ matrix.system }} \
            -o result-new \
            --fallback \
            --no-write-lock-file \
            --log-format raw \
            > >(tee stdout.log) 2> >(tee /tmp/nix-build-err.log >&2)

      - name: Output build failure
        if: failure()
        run: |
          drv=$(grep "For full logs, run" /tmp/nix-build-err.log | grep -oE "/nix/store/.*.drv")
          if [ -n "$drv" ]; then
            nix log "$drv"
            echo "$drv"
          fi
          exit 1

      - name: Diff profile
        id: diff
        run: |
          delimiter="$(openssl rand -hex 16)"
          echo "diff<<${delimiter}" >> "${GITHUB_OUTPUT}"
          nvd --color never diff ./result-previous ./result-new | sed '/<<</d; />>>/d' >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

      - name: Comment report in pr
        uses: marocchino/sticky-pull-request-comment@52423e01640425a022ef5fd42c6fb5f633a02728 # v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: ".#top.${{ matrix.host }}"
          message: |
            ### Report for `${{ matrix.host }}`
            ```
            ${{ steps.diff.outputs.diff }}
            ```

      # This is necessary because any files created by this container will be owned by root and unable to be deleted by the runner user
      - name: Clean the workspace
        run: find $GITHUB_WORKSPACE -mindepth 1 -delete
        if: ${{ always() }}

  nix-build-success:
    if: ${{ always() }}
    needs:
      - nix-build
    name: Nix Build Successful
    runs-on: ubuntu-latest
    steps:
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        name: Check matrix status
        run: exit 1
